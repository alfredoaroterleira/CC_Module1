url="https://www.bcrp.gob.pe/transparencia/datos-generales/directorio/funcionarios.html"
pagina_web=read_html(url)
css_nombre="strong" # contenemos la clase CSS en un objeto
nombre_html <- html_nodes(pagina_web,css_nombre) # con html_nodes y html_text, obtenemos el código html que contiene los nombres
nombre_texto <- html_text(nombre_html)
head(nombre_texto) #vemos los datos
###2
library(rvest)
url="https://www.bcrp.gob.pe/transparencia/datos-generales/directorio/funcionarios.html"
pagina_web=read_html(url)
css_nombre="strong" # contenemos la clase CSS en un objeto
nombre_html <- html_nodes(pagina_web,css_nombre) # con html_nodes y html_text, obtenemos el código html que contiene los nombres
nombre_texto <- html_text(nombre_html)
head(nombre_texto) #vemos los datos
library(rvest)
url="https://www.bcrp.gob.pe/transparencia/datos-generales/directorio/funcionarios.html"
pagina_web=read_html(url)
css_nombre="strong"
nombre_html <- html_nodes(pagina_web,css_nombre)
nombre_texto <- html_text(nombre_html)
head(nombre_texto)
library(rvest)
url="https://www.bcrp.gob.pe/transparencia/datos-generales/directorio/funcionarios.html"
pagina_web=read_html(url)
css_nombre="strong"
nombre_html <- html_nodes(pagina_web,css_nombre)
nombre_texto <- html_text(nombre_html)
head(nombre_texto)
library(rvest)
url="https://www.bcrp.gob.pe/transparencia/datos-generales/directorio/funcionarios.html"
pagina_web=read_html(url)
css_nombre="strong"
nombre_html <- html_nodes(pagina_web,css_nombre)
nombre_texto <- html_text(nombre_html)
head(nombre_texto)
library(rvest)
url="https://www.bcrp.gob.pe/transparencia/datos-generales/directorio/funcionarios.html"
pagina_web=read_html(url)
css_nombre="strong"
nombre_html <- html_nodes(pagina_web,css_nombre)
nombre_texto <- html_text(nombre_html)
head(nombre_texto)
library(rvest)
url="https://www.bcrp.gob.pe/transparencia/datos-generales/directorio/funcionarios.html"
pagina_web=read_html(url)
css_nombre="strong" # contenemos la clase CSS en un objeto
nombre_html <- html_nodes(pagina_web,css_nombre) # con html_nodes y html_text, obtenemos el código html que contiene los países
nombre_texto <- html_text(nombre_html)
head(nombre_texto) #vemos los datos
library(rvest)
url="https://www.bcrp.gob.pe/transparencia/datos-generales/directorio/funcionarios.html"
pagina_web=read_html(url)
css_nombre="strong"
nombre_html <- html_nodes(pagina_web,css_nombre)
nombre_texto <- html_text(nombre_html)
head(nombre_texto)
css_nombre="STRONG"
nombre_html <- html_nodes(pagina_web,css_nombre)
nombre_texto <- html_text(nombre_html)
head(nombre_texto)
css_nombre=strong
css_nombre="strong"
nombre_html <- html_nodes(pagina_web,css_nombre)
nombre_texto <- html_text(nombre_html)
head(nombre_texto)
css_nombre='strong'
nombre_html <- html_nodes(pagina_web,css_nombre)
nombre_texto <- html_text(nombre_html)
head(nombre_texto)
css_nombre="p strong"
nombre_html <- html_nodes(pagina_web,css_nombre)
nombre_texto <- html_text(nombre_html)
head(nombre_texto)
library(rvest)
url="https://www.bcrp.gob.pe/transparencia/datos-generales/directorio/funcionarios.html"
pagina_web=read_html(url)
css_nombre="p strong"
nombre_html <- html_nodes(pagina_web,css_nombre)
nombre_texto <- html_text(nombre_html)
head(nombre_texto)
library(rvest)
url="https://www.bcrp.gob.pe/transparencia/datos-generales/directorio/funcionarios.html"
pagina_web=read_html(url)
css_nombre="p strong"
nombre_html <- html_nodes(pagina_web,css_nombre)
nombre_texto <- html_text(nombre_html)
head(nombre_texto)
css_nombre="strong"
nombre_html <- html_nodes(pagina_web,css_nombre)
nombre_texto <- html_text(nombre_html)
head(nombre_texto)
library(rvest)
url="https://www.bcrp.gob.pe/transparencia/datos-generales/directorio/funcionarios.html"
pagina_web=read_html(url)
css_nombre="strong"
nombre_html <- html_nodes(pagina_web,css_nombre)
nombre_texto <- html_text(nombre_html)
head(nombre_texto)
css_correo="a"
correo_html <- html_nodes(pagina_web,css_correo)
correo_texto <- html_text(correo_html)
head(correo_texto)
css_correo="href"
correo_html <- html_nodes(pagina_web,css_correo)
correo_texto <- html_text(correo_html)
head(correo_texto)
head(correo_texto)
rm(list = ls())
install.packages("htmltab")
library(htmltab)
rm(list = ls())
install.packages("htmltab")
install.packages("Rtools")
library(htmltab)
install.packages("htmltab")
rm(list = ls())
install.packages("htmltab")
install.packages("Rtools")
library(htmltab)
rm(list = ls())
install.packages("htmltab")
install.packages("Rtools")
library(htmltab)
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
rm(list = ls())
install.packages("htmltab")
install.packages("Rtools")
library(htmltab)
rm(list = ls())
install.packages("htmltab")
install.packages("Rtools")
library(htmltab)
Sys.which("make")
rm(list = ls())
install.packages("htmltab")
install.packages("Rtools")
library(htmltab)
Sys.which("make")
install.packages("devtools")
library(devtools)
install_github("crubba/htmltab")
rm(list = ls())
library(htmltab)
# links
WhereIDH=list(page="https://es.wikipedia.org/wiki/Anexo:Pa%C3%ADses_por_%C3%ADndice_de_desarrollo_humano",
xpath='//*[@id="mw-content-text"]/div[1]/table[4]/tbody')
WhereDEMO=list(page="https://es.wikipedia.org/wiki/%C3%8Dndice_de_democracia",
xpath='//*[@id="mw-content-text"]/div[1]/div[4]/div/table/tbody')
#carga
idh  = htmltab(doc = WhereIDH$page,
which  = WhereIDH$xpath,
encoding = "UTF-8")
demo  = htmltab(doc = WhereDEMO$page,
which  = WhereDEMO$xpath,
encoding = "UTF-8")
#error con demo, utilizamos rvest
install.packages("rvest")
library(rvest)
url_demo <- "https://es.wikipedia.org/wiki/%C3%8Dndice_de_democracia"
demo_page <- read_html(url_demo)
demo <- demo_page %>%
html_elements("table") %>%
.[[1]] %>%
html_table()
View(demo)
rm(list = ls())
library(htmltab)
# links
WhereIDH=list(page="https://es.wikipedia.org/wiki/Anexo:Pa%C3%ADses_por_%C3%ADndice_de_desarrollo_humano",
xpath='//*[@id="mw-content-text"]/div[1]/table[4]/tbody')
WhereDEMO=list(page="https://es.wikipedia.org/wiki/%C3%8Dndice_de_democracia",
xpath='//*[@id="mw-content-text"]/div[1]/div[9]')
#carga
idh  = htmltab(doc = WhereIDH$page,
which  = WhereIDH$xpath,
encoding = "UTF-8")
demo  = htmltab(doc = WhereDEMO$page,
which  = WhereDEMO$xpath,
encoding = "UTF-8")
View(demo)
library(rio)
d_2018 = import("diputados_2018.xlsx")
library(tidyverse)
library(forcats)
library(ggparliament)
library(ggplot2)
library(dplyr)
library(magrittr)
# Usamos la columna 'PARTIDO' para crear la columna de agrupación de partidos
d_2018 %>%
mutate(party_groups = PARTIDO) -> mi_data_lump_count
# Contamos la cantidad de diputados por partido
mi_data_lump_count %>%
group_by(party_groups) %>%
summarise(n = sum(DIPUTADOS)) %>%
arrange(desc(n)) -> mi_data_count
# Asignamos colores a los partidos
mi_data_count %<>%
mutate(party_color = case_when(
party_groups == "MORENA" ~ "#9E1B32",
party_groups == "PAN" ~ "#1E88E5",
party_groups == "PRI" ~ "#004D2C",
party_groups == "PT" ~ "#D32F2F",
party_groups == "MC" ~ "#FF9800",
party_groups == "PE" ~ "#9C27B0",
party_groups == "PRD" ~ "#FFEB3B",
party_groups == "PV" ~ "#4CAF50",
party_groups == "SP" ~ "#757575"
))
# Creamos una nueva columna para la leyenda con los nombres de los partidos y los diputados entre paréntesis
mi_data_count <- mi_data_count %>%
mutate(legend_label = paste(party_groups, "(", n, " diputados)", sep = ""))
# Preparar los datos para el gráfico (escalado para gráfico semicircular)
mi_data_coord <- parliament_data(
election_data = mi_data_count,
type = "semicircle",
parl_rows = 10,  # Número de escaños por columna
party_seats = mi_data_count$n
)
# Crear el gráfico
mi_data_plot <- mi_data_coord %>%
ggplot(aes(x = x, y = y, colour = party_groups)) +
geom_parliament_seats(size = 3) +  # Tamaño de las bolas
ggtitle("Cámara de Diputados México (2018-2021)") +
coord_fixed() +  # Mantener la proporción correcta
theme_void() +   # Eliminamos ejes, texto y fondos no deseados
theme(
text = element_text(size = 11), # Ajustar tamaño del texto
legend.title = element_blank(),
plot.title = element_text(hjust = 0.3, size = 20), # Centrar título
plot.margin = margin(1, 1, 1, 1, "cm") # Márgenes
) +
scale_colour_manual(
values = mi_data_count$party_color,
limits = mi_data_count$party_groups,
labels = mi_data_count$legend_label  # Aquí agregamos los nombres de los partidos con la cantidad de diputados
) +
guides(colour = guide_legend(title = "Partidos"))  # Título de la leyenda
print(mi_data_plot)
library(tidyverse)
library(forcats)
library(ggparliament)
library(ggplot2)
library(dplyr)
library(magrittr)
# Usamos la columna 'PARTIDO' para crear la columna de agrupación de partidos
d_2018 %>%
mutate(party_groups = PARTIDO) -> mi_data_lump_count
# Contamos la cantidad de diputados por partido
mi_data_lump_count %>%
group_by(party_groups) %>%
summarise(n = sum(DIPUTADOS)) %>%
arrange(desc(n)) -> mi_data_count
# Asignamos colores a los partidos
mi_data_count %<>%
mutate(party_color = case_when(
party_groups == "MORENA" ~ "#9E1B32",
party_groups == "PAN" ~ "#1E88E5",
party_groups == "PRI" ~ "#004D2C",
party_groups == "PT" ~ "#D32F2F",
party_groups == "MC" ~ "#FF9800",
party_groups == "PE" ~ "#9C27B0",
party_groups == "PRD" ~ "#FFEB3B",
party_groups == "PV" ~ "#4CAF50",
party_groups == "SP" ~ "#757575"
))
# Creamos una nueva columna para la leyenda con los nombres de los partidos y los diputados entre paréntesis
mi_data_count <- mi_data_count %>%
mutate(legend_label = paste(party_groups, "(", n, " diputados)", sep = ""))
# Preparar los datos para el gráfico (escalado para gráfico semicircular)
mi_data_coord <- parliament_data(
election_data = mi_data_count,
type = "semicircle",
parl_rows = 10,  # Número de escaños por columna
party_seats = mi_data_count$n
)
# Crear el gráfico
mi_data_plot <- mi_data_coord %>%
ggplot(aes(x = x, y = y, colour = party_groups)) +
geom_parliament_seats(size = 3) +  # Tamaño de las bolas
ggtitle("Cámara de Diputados México (2018-2021)") +
coord_fixed() +  # Mantener la proporción correcta
theme_void() +   # Eliminamos ejes, texto y fondos no deseados
theme(
text = element_text(size = 11), # Ajustar tamaño del texto
legend.title = element_blank(),
plot.title = element_text(hjust = 0.3, size = 20, face = "bold"), # Centrar título
plot.margin = margin(1, 1, 1, 1, "cm") # Márgenes
) +
scale_colour_manual(
values = mi_data_count$party_color,
limits = mi_data_count$party_groups,
labels = mi_data_count$legend_label  # Aquí agregamos los nombres de los partidos con la cantidad de diputados
) +
guides(colour = guide_legend(title = "Partidos"))  # Título de la leyenda
print(mi_data_plot)
ggsave("grafico_2018.png", plot = mi_data_plot, width = 10, height = 7, dpi = 300)
setwd("C:/Users/USUARIO/Documents/GitHub/CC_Module1")
install.packages("ggplot2")
library(ggplot2)
install.packages("ggplot2")
mtcars
qplot(
mtcars$cyl,
geom = "bar"
)
qplot(
mtcars$cyl,
geom = "bar",
fill = I("blue"),
colour = I("red"))
qplot(
mtcars$cyl,
geom = "bar",
fill = I("blue"),
)
qplot(
mtcars$cyl,
geom = "bar",
fill = I("blue"),
colour = I("red"))
qplot(
mtcars$cyl,
geom = "bar",
fill = I("blue"),
xlab = "Cylinders",
ylab = "Number of Vehicles"
)
qplot(
mtcars$cyl,
geom = "bar",
fill = I("blue"),
xlab = "Cylinders",
ylab = "Number of Vehicles",
main = "Cylinders in mtcars"
)
qplot(
mtcars$cyl,
geom = "bar",
fill = I("blue"),
xlab = "Cylinders",
ylab = "Number of Vehicles",
main = "Cylinders in mtcars"
) +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = mtcars, aes(x = factor(cyl))) +
geom_bar(fill = "blue") +
geom_text(
stat = "count",                # Cuenta las observaciones automáticamente
aes(label = ..count..),        # Usa el conteo como etiqueta
vjust = -0.5,                  # Ajusta la posición vertical por encima de las barras
color = "black",               # Color del texto
size = 4                       # Tamaño del texto
) +
labs(
title = "Cylinders in mtcars",
x = "Cylinders",
y = "Number of Vehicles"
) +
theme(plot.title = element_text(hjust = 0.5)) # Centrar el título
ggplot(data = mtcars, aes(x = factor(cyl))) +
geom_bar(fill = "blue") +
geom_text(
stat = "count",                # Cuenta las observaciones automáticamente
aes(label = ..count..),        # Usa el conteo como etiqueta
vjust = -0.5,                  # Ajusta la posición vertical por encima de las barras
color = "black",               # Color del texto
size = 4                       # Tamaño del texto
) +
labs(
title = "Cylinders in mtcars",
x = "Cylinders",
y = "Number of Vehicles"
) +
theme(plot.title = element_text(hjust = 0.5)) # Centramos el título
install.packages("ggplot2")
library(ggplot2)
install.packages("ggplot2")
mtcars
qplot(
mtcars$cyl,
geom = "bar"
)
qplot(
mtcars$cyl,
geom = "bar",
fill = I("blue"),
colour = I("red"))  #si no incluimos esta parte, todo será azul
qplot(
mtcars$cyl,
geom = "bar",
fill = I("blue"),
xlab = "Cylinders",
ylab = "Number of Vehicles"
)
qplot(
mtcars$cyl,
geom = "bar",
fill = I("blue"),
xlab = "Cylinders",
ylab = "Number of Vehicles",
main = "Cylinders in mtcars"
)
mtcars
qplot(
mtcars$hp,
geom = "histogram"
)
qplot(
mtcars$hp,
geom = "histogram",
binwidth = 25
)
qplot(
mtcars$hp,
geom = "histogram",
binwidth = 25
)
qplot(
mtcars$hp,
geom = "histogram",
binwidth = 25,
colour = I("black")
)
qplot(
mtcars$hp,
geom = "histogram",
binwidth = 25,
colour = I("black"),
xlim = c(50, 350)
)
qplot(
mtcars$hp,
geom = "histogram",
binwidth = 25,
colour = I("black"),
xlab = "Horsepower",
ylab = "Number of cars"
)
qplot(
mtcars$hp,
geom = "histogram",
binwidth = 25,
colour = I("black"),
xlab = "Horsepower",
ylab = "Number of cars",
alpha = I(0)
)
qplot(
mtcars$hp,
geom = "histogram",
binwidth = 25,
colour = I("black"),
xlab = "Horsepower",
ylab = "Number of cars",
alpha = I(0),
main = "Histogram"
)
barp <- ggplot(mtcars, aes(x=1, y=srot(mtcars$carb), fill=sort(mtcars$carb))) + geom_bar(stat="identity")
print(barp)
barp <- ggplot(mtcars, aes(x=1, y=sort(mtcars$carb), fill=sort(mtcars$carb))) + geom_bar(stat="identity")
print(barp)
barp <- barp + coord_polar(theta='y')
print(barp)
barp <- barp + coord_polar(theta='y')
barp <- barp + theme(
axis.line=elemnt_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.y=element_blank()
)
barp <- barp + coord_polar(theta='y')
barp <- barp + theme(
axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.y=element_blank()
)
print(barp)
barp <- barp + coord_polar(theta='y')
barp <- barp + theme(
axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank()
)
print(barp)
barp <- barp + coord_polar(theta='y')
barp <- barp + theme(
axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank()
) + labs(y="Carburetors")
print(barp)
mtcars
ggplot(data= mtcars, aes(mtcars$hp))  +
geom_histogram(breaks=seq(40, 350, by = 25),
colour = I("black"),
aes(fill=..count..))
mtcars
head(mtcars)
tail(mtcars)
summary(mtcaars)
summary(mtcars)
mean(mtcars$cyl)
